llm_models:
    - name: "normal"
      model: "gemini-2.0-flash-001"
      provider: "google"
      api_key: "*****"
      temperature: 0.2

# redmine is running within docker and this config can stay hardcoded. Keep api-key as is. It plays no role in anything.
redmine:
  db: redmine:redmine@tcp(localhost:3306)/redmine
  url: "http://localhost:10083"
  api_key: "2159cef2fb6c82c4f66981f199798781e161c694"
  repositories: "/var/repositories/"

aider:
  timeout: "180m"
  config: "/path-to-here/.andai.aider.yaml" # configure aider model in that file

projects:
  - identifier: "test"
    name: "Test Project"
    description: "Test project"
    git_path: "/test-repo/.git" # path to git repo from within redmine container
    git_local_dir: "/home/user/test-repo/.git" # path to git repo on local machine or if run from within container - path to git repo from within container
    final_branch: "main" # branch where final code will be merged into. Can be anything. If branch does not exist, it will be created.
    wiki: |
      # My Test Project
      More info about the project here.

workflow:
  states:
    In Progress:
      description: Implement what is required.
      ai: ["Task"] # AI is allowed to work on "Task" issues in this state
      is_default: True
      is_first: True
    Deployment:
      description: Merge code into to parent Issue branch.
      ai: ["Task"]
    Done:
      description: Issue is completed.
      ai: []
      is_closed: True

  transitions:
    - source: In Progress
      target: Deployment
    - source: Deployment
      target: Done

  issue_types:
    Task:
      description: Single small coding task.
      jobs:
        In Progress:
          steps:
            - command: aider
              action: architect-code
              context: ["project", "wiki", "ticket", "comments"]
              prompt: Implement (code) given Task issue based on available information.
        Deployment:
          steps:
            - command: merge-into-parent # merge into parent task, but in this case we have only one issue type so it will be merged into final_branch

  # order in what tasks should be picked up by AI
  priorities:
    - type: Task
      state: Deployment
    - type: Task
      state: In Progress
